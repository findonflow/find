on:
  push:
    branches:
      - main

name: ci
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.18
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          args: --timeout=3m
  tidy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.18
      - uses: zencargo/github-action-go-mod-tidy@v1
        with:
          go-version: 1.18

  test:
    runs-on: ubuntu-latest
    env:
      TESTNET_ACCOUNT: "98ebfd2fa655cea228bd307e0e838cf3bdf08f8dde0b9baa6054c54b462b3acc"
      MAINNET_FIND: "98ebfd2fa655cea228bd307e0e838cf3bdf08f8dde0b9baa6054c54b462b3acc"
      MAINNET_FIND_ADMIN: "98ebfd2fa655cea228bd307e0e838cf3bdf08f8dde0b9baa6054c54b462b3acc"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.18
      - name: run tests
        run: go test -timeout 30m -json ./... > test.json
      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.0
        with:
          test-results: test.json

  generate-client:
    runs-on: ubuntu-latest
    env:
      TESTNET_ACCOUNT: "98ebfd2fa655cea228bd307e0e838cf3bdf08f8dde0b9baa6054c54b462b3acc"
      MAINNET_FIND: "98ebfd2fa655cea228bd307e0e838cf3bdf08f8dde0b9baa6054c54b462b3acc"
      MAINNET_FIND_ADMIN: "98ebfd2fa655cea228bd307e0e838cf3bdf08f8dde0b9baa6054c54b462b3acc"
    needs: test
    output:
      client_changed: ${{ steps.bump.outputs.bumped }}
    steps:
     - name: Checkout code
       uses: actions/checkout@v3
     - uses: actions/setup-go@v4
       with:
         go-version: 1.18
     - run: make client
     - name: verify client changed
       uses: tj-actions/verify-changed-files@v14
       id: verify-changed-files
       with:
         files: |
           lib/find.json
           dapper-tx
      - name: fail if dapper transactions changed
        if: contains(steps.verify-changed-files.outputs.changed_files, 'dapper-tx')
        run: |
        echo "dapper-tx is not updated"
        exit 1
      - name: fail if find client not changed
        if: contains(steps.verify-changed-files.outputs.changed_files, 'lib/find.json')
        run: |
        echo "find client is not updated"
        exit 1

      - name: Check package version
        id: cpv
        uses: PostHog/check-package-version@v2

      - name: Ensure package is not rc version
      if : contains(steps.cpv.outputs.committed-version, 'rc')
        run : |
          echo "version is not updated, it cannot be in rc version"
          exit 1

      - name: Publish new version
        if: steps.cpv.outputs.is-new-version == 'true'
        run: npm publish
